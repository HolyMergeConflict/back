version: "3.9"
services:
  app:
    build: .
    container_name: reco-api
    ports: ["8000:8000"]
    environment:
      - UVICORN_WORKERS=1
      - PYTHONASYNCIODEBUG=0
      - SQL_URL=sqlite+aiosqlite:///./app.db
      - SECRET_KEY=supersecret
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - ALGORITHM=HS256
      - REDIS_HOST=redis
    env_file:
      .env
    depends_on:
      - prometheus
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 3s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    ports: ["6379:6379"]
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports: ["8080:8080"]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
      - --web.enable-remote-write-receiver
      - --web.enable-admin-api
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerting.yml:/etc/prometheus/alerting.yml:ro
      - prom_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports: [ "9090:9090" ]
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alert_data:/alertmanager
    ports: [ "9093:9093" ]
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.7
    container_name: loki
    command: -config.file=/etc/loki/loki-config.yml
    ports: [ "3100:3100" ]
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki_data:/loki
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.7
    container_name: promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    depends_on: [ loki ]

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    pid: "host"
    network_mode: "host"
    command:
      - --path.rootfs=/
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning:ro
    ports: [ "3000:3000" ]
    restart: unless-stopped
    depends_on: [ prometheus, loki ]

volumes:
  prom_data:
  alert_data:
  loki_data:
  grafana_data: